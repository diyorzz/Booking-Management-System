@page "/history"
@using BookingManagement.Interfaces
@using BookingManagement.Models
@using BookingManagement.Services
@using BookingManagement.Models.Enums

@inject ITicketService TicketService

@rendermode InteractiveServer

<h3>Completed Ticket History</h3>

<div class="container mt-5">
    <div class="table-responsive">
        <table class="table table-striped table-bordered text-center">
            <thead class="table-primary">
                <tr>
                    <th>ID</th>
                    <th>Customer ID</th>
                    <th>Priority</th>
                    <th>Creation Time</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in completedTickets)
                {
                    <tr>
                        <td>@ticket.Id</td>
                        <td>@ticket.CustomerId</td>
                        <td>@ticket.Priority</td>
                        <td>@ticket.CreationTime.ToString("g")</td>
                        <td>@ticket.Status</td>
                        <td>
                            <button class="btn btn-danger" @onclick="() => DeleteTicket(ticket.Id)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<Ticket> completedTickets = new List<Ticket>();

    protected override async Task OnInitializedAsync()
    {
        completedTickets = await TicketService.GetCompletedTicketsAsync();
    }
    private async Task DeleteTicket(int ticketId)
    {
        await TicketService.DeleteTicketAsync(ticketId);

        completedTickets = completedTickets.Where(t => t.Id != ticketId).ToList();
    }
}

