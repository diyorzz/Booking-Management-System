@page "/ticket-queue"
@using BookingManagement.Interfaces
@using BookingManagement.Models
@using BookingManagement.Services
@using BookingManagement.Models.Enums

@inject NavigationManager Navigation
@inject ITicketService TicketService

@rendermode InteractiveServer

<h3>Ticket Queue Management</h3>

<div class="container mt-5">
    <div class="card shadow-sm p-4 mb-4">
        <h5 class="card-title text-primary mb-4">Add a New Ticket</h5>

        <div class="form-group mb-3">
            <label for="customerId">Customer ID:</label>
            <input @bind="customerId" type="number" class="form-control" id="customerId" placeholder="Enter Customer ID" />
        </div>

        <div class="form-group mb-3">
            <label for="priority">Priority:</label>
            <select @bind="selectedPriority" class="form-control" id="priority">
                @foreach (var priority in Enum.GetValues<TicketPriority>())
                {
                    <option value="@priority">@priority</option>
                }
            </select>
        </div>

        <button class="btn btn-primary w-100" @onclick="AddTicket">
            <i class="fas fa-plus-circle"></i> Add Ticket
        </button>
    </div>

    <div class="d-flex justify-content-center mb-4">
        <button class="btn btn-secondary w-50" @onclick="ProcessNextTicket">
            <i class="fas fa-tasks"></i> Process Next Ticket
        </button>
    </div>

    <h5 class="text-center text-secondary mb-3">Tickets</h5>

    <div class="table-responsive">
        <table class="table table-striped table-bordered text-center">
            <thead class="table-primary">
                <tr>
                    <th>ID</th>
                    <th>Customer ID</th>
                    <th>Priority</th>
                    <th>Creation Time</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in tickets)
                {
                    <tr>
                        <td>@ticket.Id</td>
                        <td>@ticket.CustomerId</td>
                        <td>@ticket.Priority</td>
                        <td>@ticket.CreationTime.ToString("g")</td>
                        <td>@ticket.Status</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private int customerId;

    private TicketPriority selectedPriority = TicketPriority.Low;

    private List<Ticket> tickets = new List<Ticket>();

    protected override async Task OnInitializedAsync()
    {
        tickets = await TicketService.GetTicketsAsync();
    }

    private async Task AddTicket()
    {
        await TicketService.AddTicketAsync(customerId, selectedPriority);
        customerId = 0;
        tickets = await TicketService.GetTicketsAsync();
    }

    private void ProcessNextTicket()
    {
        Navigation.NavigateTo("/next-ticket");

         //var nextTicket = await TicketService.GetNextTicketAsync();
         //tickets = await TicketService.GetTicketsAsync();
    }

    private async Task CompleteTicket(int ticketId)
    {
        await TicketService.CompleteTicketAsync(ticketId);
        tickets = await TicketService.GetTicketsAsync();
    }
}
